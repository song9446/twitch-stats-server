import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, D as create_slot, e as element, a as space, b as svg_element, c as claim_element, f as children, j as detach_dev, k as claim_space, l as attr_dev, m as toggle_class, o as add_location, P as listen_dev, p as insert_dev, q as append_dev, E as get_slot_changes, F as get_slot_context, w as transition_in, x as transition_out, R as run_all } from './index.1eb00da2.js';
import { c as createCommonjsModule, u as unwrapExports } from './api.8ae65b01.js';

var faQuestion = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, '__esModule', { value: true });
var prefix = 'fas';
var iconName = 'question';
var width = 384;
var height = 512;
var ligatures = [];
var unicode = 'f128';
var svgPathData = 'M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z';

exports.definition = {
  prefix: prefix,
  iconName: iconName,
  icon: [
    width,
    height,
    ligatures,
    unicode,
    svgPathData
  ]};

exports.faQuestion = exports.definition;
exports.prefix = prefix;
exports.iconName = iconName;
exports.width = width;
exports.height = height;
exports.ligatures = ligatures;
exports.unicode = unicode;
exports.svgPathData = svgPathData;
});

unwrapExports(faQuestion);
var faQuestion_1 = faQuestion.definition;
var faQuestion_2 = faQuestion.faQuestion;
var faQuestion_3 = faQuestion.prefix;
var faQuestion_4 = faQuestion.iconName;
var faQuestion_5 = faQuestion.width;
var faQuestion_6 = faQuestion.height;
var faQuestion_7 = faQuestion.ligatures;
var faQuestion_8 = faQuestion.unicode;
var faQuestion_9 = faQuestion.svgPathData;

/* src/components/Tip.svelte generated by Svelte v3.12.1 */

const file = "src/components/Tip.svelte";

const get_contents_slot_changes = () => ({});
const get_contents_slot_context = () => ({});

const get_tip_slot_changes = () => ({});
const get_tip_slot_context = () => ({});

function create_fragment(ctx) {
	var div1, div0, t, svg, path, current, dispose;

	const tip_slot_template = ctx.$$slots.tip;
	const tip_slot = create_slot(tip_slot_template, ctx, get_tip_slot_context);

	const contents_slot_template = ctx.$$slots.contents;
	const contents_slot = create_slot(contents_slot_template, ctx, get_contents_slot_context);

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");

			if (tip_slot) tip_slot.c();
			t = space();

			if (!contents_slot) {
				svg = svg_element("svg");
				path = svg_element("path");
			}

			if (contents_slot) contents_slot.c();
			this.h();
		},

		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			div0 = claim_element(div1_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			if (tip_slot) tip_slot.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			t = claim_space(div1_nodes);

			if (!contents_slot) {
				svg = claim_element(div1_nodes, "svg", { "area-hidden": true, role: true, xmlns: true, viewBox: true, class: true }, true);
				var svg_nodes = children(svg);

				path = claim_element(svg_nodes, "path", { fill: true, d: true }, true);
				var path_nodes = children(path);

				path_nodes.forEach(detach_dev);
				svg_nodes.forEach(detach_dev);
			}

			if (contents_slot) contents_slot.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div0, "class", "absolute ml-6 tooltip-arrow bg-black text-white text-xs opacity-75 p-2 svelte-1buxecj");
			toggle_class(div0, "hidden", !ctx.mouse_overed);
			toggle_class(div0, "right", ctx.position=="right");
			toggle_class(div0, "bottom", ctx.position=="bottom");
			add_location(div0, file, 1, 2, 164);

			if (!contents_slot) {
				attr_dev(path, "fill", "currentColor");
				attr_dev(path, "d", faQuestion_2.icon[4]);
				add_location(path, file, 6, 6, 596);
				attr_dev(svg, "area-hidden", "true");
				attr_dev(svg, "role", "img");
				attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
				attr_dev(svg, "viewBox", "0 0 " + faQuestion_2.icon[0] + " " + faQuestion_2.icon[1]);
				attr_dev(svg, "class", "w-4 h-4 -mt-1 overflow-visible inline-block");
				add_location(svg, file, 5, 4, 411);
			}

			attr_dev(div1, "class", "relative inline-block align-top");
			toggle_class(div1, "cursor-pointer", ctx.click);
			add_location(div1, file, 0, 0, 0);

			dispose = [
				listen_dev(div1, "mouseover", ctx.mouseover),
				listen_dev(div1, "mouseout", ctx.mouseout),
				listen_dev(div1, "click", ctx.click),
				listen_dev(div1, "touchstart", ctx.click)
			];
		},

		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);

			if (tip_slot) {
				tip_slot.m(div0, null);
			}

			append_dev(div1, t);

			if (!contents_slot) {
				append_dev(div1, svg);
				append_dev(svg, path);
			}

			else {
				contents_slot.m(div1, null);
			}

			current = true;
		},

		p: function update(changed, ctx) {
			if (tip_slot && tip_slot.p && changed.$$scope) {
				tip_slot.p(
					get_slot_changes(tip_slot_template, ctx, changed, get_tip_slot_changes),
					get_slot_context(tip_slot_template, ctx, get_tip_slot_context)
				);
			}

			if (changed.mouse_overed) {
				toggle_class(div0, "hidden", !ctx.mouse_overed);
			}

			if (changed.position) {
				toggle_class(div0, "right", ctx.position=="right");
				toggle_class(div0, "bottom", ctx.position=="bottom");
			}

			if (contents_slot && contents_slot.p && changed.$$scope) {
				contents_slot.p(
					get_slot_changes(contents_slot_template, ctx, changed, get_contents_slot_changes),
					get_slot_context(contents_slot_template, ctx, get_contents_slot_context)
				);
			}

			if (changed.click) {
				toggle_class(div1, "cursor-pointer", ctx.click);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(tip_slot, local);
			transition_in(contents_slot, local);
			current = true;
		},

		o: function outro(local) {
			transition_out(tip_slot, local);
			transition_out(contents_slot, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div1);
			}

			if (tip_slot) tip_slot.d(detaching);

			if (contents_slot) contents_slot.d(detaching);
			run_all(dispose);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment.name, type: "component", source: "", ctx });
	return block;
}

function instance($$self, $$props, $$invalidate) {
	let mouse_overed = false;
let { position = "right" } = $$props;
function mouseover(){
  $$invalidate('mouse_overed', mouse_overed = true);
}
function mouseout(){
  $$invalidate('mouse_overed', mouse_overed = false);
}
let { click = null } = $$props;

	const writable_props = ['position', 'click'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Tip> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;

	$$self.$set = $$props => {
		if ('position' in $$props) $$invalidate('position', position = $$props.position);
		if ('click' in $$props) $$invalidate('click', click = $$props.click);
		if ('$$scope' in $$props) $$invalidate('$$scope', $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => {
		return { mouse_overed, position, click };
	};

	$$self.$inject_state = $$props => {
		if ('mouse_overed' in $$props) $$invalidate('mouse_overed', mouse_overed = $$props.mouse_overed);
		if ('position' in $$props) $$invalidate('position', position = $$props.position);
		if ('click' in $$props) $$invalidate('click', click = $$props.click);
	};

	return {
		mouse_overed,
		position,
		mouseover,
		mouseout,
		click,
		$$slots,
		$$scope
	};
}

class Tip extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, ["position", "click"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Tip", options, id: create_fragment.name });
	}

	get position() {
		throw new Error("<Tip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set position(value) {
		throw new Error("<Tip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get click() {
		throw new Error("<Tip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set click(value) {
		throw new Error("<Tip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { Tip as T };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGlwLmU2MTU5MmQxLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9ub2RlX21vZHVsZXMvQGZvcnRhd2Vzb21lL2ZyZWUtc29saWQtc3ZnLWljb25zL2ZhUXVlc3Rpb24uanMiLCIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9UaXAuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgcHJlZml4ID0gJ2Zhcyc7XG52YXIgaWNvbk5hbWUgPSAncXVlc3Rpb24nO1xudmFyIHdpZHRoID0gMzg0O1xudmFyIGhlaWdodCA9IDUxMjtcbnZhciBsaWdhdHVyZXMgPSBbXTtcbnZhciB1bmljb2RlID0gJ2YxMjgnO1xudmFyIHN2Z1BhdGhEYXRhID0gJ00yMDIuMDIxIDBDMTIyLjIwMiAwIDcwLjUwMyAzMi43MDMgMjkuOTE0IDkxLjAyNmMtNy4zNjMgMTAuNTgtNS4wOTMgMjUuMDg2IDUuMTc4IDMyLjg3NGw0My4xMzggMzIuNzA5YzEwLjM3MyA3Ljg2NSAyNS4xMzIgNi4wMjYgMzMuMjUzLTQuMTQ4IDI1LjA0OS0zMS4zODEgNDMuNjMtNDkuNDQ5IDgyLjc1Ny00OS40NDkgMzAuNzY0IDAgNjguODE2IDE5Ljc5OSA2OC44MTYgNDkuNjMxIDAgMjIuNTUyLTE4LjYxNyAzNC4xMzQtNDguOTkzIDUxLjE2NC0zNS40MjMgMTkuODYtODIuMjk5IDQ0LjU3Ni04Mi4yOTkgMTA2LjQwNVYzMjBjMCAxMy4yNTUgMTAuNzQ1IDI0IDI0IDI0aDcyLjQ3MWMxMy4yNTUgMCAyNC0xMC43NDUgMjQtMjR2LTUuNzczYzAtNDIuODYgMTI1LjI2OC00NC42NDUgMTI1LjI2OC0xNjAuNjI3QzM3Ny41MDQgNjYuMjU2IDI4Ni45MDIgMCAyMDIuMDIxIDB6TTE5MiAzNzMuNDU5Yy0zOC4xOTYgMC02OS4yNzEgMzEuMDc1LTY5LjI3MSA2OS4yNzEgMCAzOC4xOTUgMzEuMDc1IDY5LjI3IDY5LjI3MSA2OS4yN3M2OS4yNzEtMzEuMDc1IDY5LjI3MS02OS4yNzEtMzEuMDc1LTY5LjI3LTY5LjI3MS02OS4yN3onO1xuXG5leHBvcnRzLmRlZmluaXRpb24gPSB7XG4gIHByZWZpeDogcHJlZml4LFxuICBpY29uTmFtZTogaWNvbk5hbWUsXG4gIGljb246IFtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgbGlnYXR1cmVzLFxuICAgIHVuaWNvZGUsXG4gICAgc3ZnUGF0aERhdGFcbiAgXX07XG5cbmV4cG9ydHMuZmFRdWVzdGlvbiA9IGV4cG9ydHMuZGVmaW5pdGlvbjtcbmV4cG9ydHMucHJlZml4ID0gcHJlZml4O1xuZXhwb3J0cy5pY29uTmFtZSA9IGljb25OYW1lO1xuZXhwb3J0cy53aWR0aCA9IHdpZHRoO1xuZXhwb3J0cy5oZWlnaHQgPSBoZWlnaHQ7XG5leHBvcnRzLmxpZ2F0dXJlcyA9IGxpZ2F0dXJlcztcbmV4cG9ydHMudW5pY29kZSA9IHVuaWNvZGU7XG5leHBvcnRzLnN2Z1BhdGhEYXRhID0gc3ZnUGF0aERhdGE7IiwiPGRpdiBjbGFzcz1cInJlbGF0aXZlIGlubGluZS1ibG9jayBhbGlnbi10b3BcIiBvbjptb3VzZW92ZXI9e21vdXNlb3Zlcn0gb246bW91c2VvdXQ9e21vdXNlb3V0fSBvbjpjbGljaz17Y2xpY2t9IG9uOnRvdWNoc3RhcnQ9e2NsaWNrfSBjbGFzczpjdXJzb3ItcG9pbnRlcj17Y2xpY2t9PlxuICA8ZGl2IGNsYXNzPVwiYWJzb2x1dGUgbWwtNiB0b29sdGlwLWFycm93IGJnLWJsYWNrIHRleHQtd2hpdGUgdGV4dC14cyBvcGFjaXR5LTc1IHAtMlwiIGNsYXNzOmhpZGRlbj17IW1vdXNlX292ZXJlZH0gY2xhc3M6cmlnaHQ9e3Bvc2l0aW9uPT1cInJpZ2h0XCJ9IGNsYXNzOmJvdHRvbT17cG9zaXRpb249PVwiYm90dG9tXCJ9PlxuICAgIDxzbG90IG5hbWU9XCJ0aXBcIj48L3Nsb3Q+XG4gIDwvZGl2PlxuICA8c2xvdCBuYW1lPVwiY29udGVudHNcIj5cbiAgICA8c3ZnIGFyZWEtaGlkZGVuPVwidHJ1ZVwiIHJvbGU9XCJpbWdcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCB7ZmFRdWVzdGlvbi5pY29uWzBdfSB7ZmFRdWVzdGlvbi5pY29uWzFdfVwiIGNsYXNzPVwidy00IGgtNCAtbXQtMSBvdmVyZmxvdy12aXNpYmxlIGlubGluZS1ibG9ja1wiPlxuICAgICAgPHBhdGggZmlsbD1cImN1cnJlbnRDb2xvclwiIGQ9XCJ7ZmFRdWVzdGlvbi5pY29uWzRdfVwiLz5cbiAgICA8L3N2Zz5cbiAgPC9zbG90PlxuPC9kaXY+XG5cbjxzdHlsZT5cbi5yaWdodC50b29sdGlwLWFycm93IHtcbiAgYm94LXNoYWRvdzogMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgei1pbmRleDogNTAwO1xuICB3aWR0aDogbWF4LWNvbnRlbnQ7XG59XG4ucmlnaHQudG9vbHRpcC1hcnJvdzo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDAuNHJlbTtcbiAgcmlnaHQ6IDEwMCU7XG4gIGJvcmRlci13aWR0aDogNnB4O1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICMwMDAgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XG59XG4ucmlnaHQudG9vbHRpcC1hcnJvdzo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygwLjRyZW0gKyAxcHgpO1xuICByaWdodDogY2FsYygxMDAlIC0gMXB4KTsgXG4gIGJvcmRlci13aWR0aDogNXB4O1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICMwMDAgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XG59XG5cbi5ib3R0b20udG9vbHRpcC1hcnJvdyB7XG4gIGJveC1zaGFkb3c6IDAgM3B4IDZweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIHotaW5kZXg6IDUwMDtcbiAgdG9wOiAxNTAlO1xuICByaWdodDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg1MCUsIDApO1xuICB3aWR0aDogbWF4LWNvbnRlbnQ7XG59XG4uYm90dG9tLnRvb2x0aXAtYXJyb3c6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDEwMCU7ICBcbiAgbGVmdDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTVweDtcbiAgYm9yZGVyLXdpZHRoOiA1cHg7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgIzAwMCB0cmFuc3BhcmVudDtcbn1cbjwvc3R5bGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgeyBmYVF1ZXN0aW9uIGFzIGZhUXVlc3Rpb24gfSBmcm9tICdAZm9ydGF3ZXNvbWUvZnJlZS1zb2xpZC1zdmctaWNvbnMvZmFRdWVzdGlvbidcbmxldCBtb3VzZV9vdmVyZWQgPSBmYWxzZTtcbmV4cG9ydCBsZXQgcG9zaXRpb24gPSBcInJpZ2h0XCI7XG5mdW5jdGlvbiBtb3VzZW92ZXIoKXtcbiAgbW91c2Vfb3ZlcmVkID0gdHJ1ZTtcbn1cbmZ1bmN0aW9uIG1vdXNlb3V0KCl7XG4gIG1vdXNlX292ZXJlZCA9IGZhbHNlO1xufVxuZXhwb3J0IGxldCBjbGljayA9IG51bGw7XG48L3NjcmlwdD5cbiJdLCJuYW1lcyI6WyJmYVF1ZXN0aW9uIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUEsQUFDQSxNQUFNLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztBQUM5RCxJQUFJLE1BQU0sR0FBRyxLQUFLLENBQUM7QUFDbkIsSUFBSSxRQUFRLEdBQUcsVUFBVSxDQUFDO0FBQzFCLElBQUksS0FBSyxHQUFHLEdBQUcsQ0FBQztBQUNoQixJQUFJLE1BQU0sR0FBRyxHQUFHLENBQUM7QUFDakIsSUFBSSxTQUFTLEdBQUcsRUFBRSxDQUFDO0FBQ25CLElBQUksT0FBTyxHQUFHLE1BQU0sQ0FBQztBQUNyQixJQUFJLFdBQVcsR0FBRyxza0JBQXNrQixDQUFDOztBQUV6bEIsa0JBQWtCLEdBQUc7RUFDbkIsTUFBTSxFQUFFLE1BQU07RUFDZCxRQUFRLEVBQUUsUUFBUTtFQUNsQixJQUFJLEVBQUU7SUFDSixLQUFLO0lBQ0wsTUFBTTtJQUNOLFNBQVM7SUFDVCxPQUFPO0lBQ1AsV0FBVztHQUNaLENBQUMsQ0FBQzs7QUFFTCxrQkFBa0IsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDO0FBQ3hDLGNBQWMsR0FBRyxNQUFNLENBQUM7QUFDeEIsZ0JBQWdCLEdBQUcsUUFBUSxDQUFDO0FBQzVCLGFBQWEsR0FBRyxLQUFLLENBQUM7QUFDdEIsY0FBYyxHQUFHLE1BQU0sQ0FBQztBQUN4QixpQkFBaUIsR0FBRyxTQUFTLENBQUM7QUFDOUIsZUFBZSxHQUFHLE9BQU8sQ0FBQztBQUMxQixtQkFBbUIsR0FBRyxXQUFXOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dDQzNCbUUsS0FBQyxZQUFZO21DQUFlLFFBQVEsRUFBRSxPQUFPO29DQUFnQixRQUFRLEVBQUUsUUFBUTs7Ozs7d0JBSy9JQSxZQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzs7Ozs7c0NBRGtDQSxZQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFHQSxZQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzs7Ozs7OzRDQUwyQixLQUFLOzs7O3NDQUFwRyxTQUFTO3FDQUFlLFFBQVE7a0NBQVksS0FBSzt1Q0FBaUIsS0FBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aUNBQzlCLEtBQUMsWUFBWTs7OztvQ0FBZSxRQUFRLEVBQUUsT0FBTztxQ0FBZ0IsUUFBUSxFQUFFLFFBQVE7Ozs7Ozs7Ozs7OzZDQUR6QixLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0EwRC9KLElBQUksWUFBWSxHQUFHLEtBQUssQ0FBQztBQUNsQixNQUFJLFFBQVEsR0FBRyxtQkFBTyxDQUFDO0FBQzlCLFNBQVMsU0FBUyxFQUFFOytCQUNsQixZQUFZLEdBQUcsS0FBSSxDQUFDO0NBQ3JCO0FBQ0QsU0FBUyxRQUFRLEVBQUU7K0JBQ2pCLFlBQVksR0FBRyxNQUFLLENBQUM7Q0FDdEI7QUFDTSxNQUFJLEtBQUssR0FBRyxnQkFBSSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
