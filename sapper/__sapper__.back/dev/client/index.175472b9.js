import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, D as create_slot, M as onMount, a3 as onDestroy, e as element, t as text, a as space, c as claim_element, f as children, h as claim_text, j as detach_dev, k as claim_space, l as attr_dev, o as add_location, P as listen_dev, p as insert_dev, q as append_dev, E as get_slot_changes, F as get_slot_context, w as transition_in, x as transition_out, R as run_all, r as binding_callbacks, u as bind, v as mount_component, y as destroy_component, g as globals, b as svg_element, n as noop, C as add_flush_callback } from './index.1eb00da2.js';
import { c as createCommonjsModule, u as unwrapExports, A as API } from './api.8ae65b01.js';
import { S as StreamerAutoComplete } from './StreamerAutoComplete.3315e373.js';
import { T as Tip } from './Tip.e61592d1.js';
import './Panel.c7bb1527.js';

/* src/components/Modal.svelte generated by Svelte v3.12.1 */

const file = "src/components/Modal.svelte";

function create_fragment(ctx) {
	var div1, div0, button, t0, t1, current, dispose;

	const default_slot_template = ctx.$$slots.default;
	const default_slot = create_slot(default_slot_template, ctx, null);

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			button = element("button");
			t0 = text("X");
			t1 = space();

			if (default_slot) default_slot.c();
			this.h();
		},

		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			div0 = claim_element(div1_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			button = claim_element(div0_nodes, "BUTTON", { class: true }, false);
			var button_nodes = children(button);

			t0 = claim_text(button_nodes, "X");
			button_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);

			if (default_slot) default_slot.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(button, "class", "absolute right-0 top-0 bg-black text-white opacity-75 w-6");
			add_location(button, file, 2, 4, 174);

			attr_dev(div0, "class", "relative container svelte-9zy1a5");
			add_location(div0, file, 1, 2, 116);
			attr_dev(div1, "class", "modal svelte-9zy1a5");
			add_location(div1, file, 0, 0, 0);

			dispose = [
				listen_dev(button, "click", ctx.onclick),
				listen_dev(div1, "keydown", ctx.onkeydown),
				listen_dev(div1, "mousedown", ctx.onmousedown),
				listen_dev(div1, "touchstart", ctx.ontouchstart)
			];
		},

		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, button);
			append_dev(button, t0);
			append_dev(div0, t1);

			if (default_slot) {
				default_slot.m(div0, null);
			}

			ctx.div0_binding(div0);
			ctx.div1_binding(div1);
			current = true;
		},

		p: function update(changed, ctx) {
			if (default_slot && default_slot.p && changed.$$scope) {
				default_slot.p(
					get_slot_changes(default_slot_template, ctx, changed, null),
					get_slot_context(default_slot_template, ctx, null)
				);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},

		o: function outro(local) {
			transition_out(default_slot, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div1);
			}

			if (default_slot) default_slot.d(detaching);
			ctx.div0_binding(null);
			ctx.div1_binding(null);
			run_all(dispose);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment.name, type: "component", source: "", ctx });
	return block;
}

let elements = {},
    next_id = 0;
function show(id) {
  elements[id].classList.add("show");
}
function hide(id) {
  elements[id].classList.remove("show");
}

function instance($$self, $$props, $$invalidate) {
	let id = next_id++;
  let el, inner_el;
  function ontouchstart(e){
    e.pageX = e.touches[0].pageX;
    e.pageY = e.touches[0].pageY;
    return onmousedown(e);
  }
  function onmousedown(e){
    let x = e.pageX,
      y = e.pageY,
      r = inner_el.getBoundingClientRect();
    console.log(x, r.x, r.width);
    if(x < r.x || x > r.x + r.width || y < r.y || y > r.y+r.height)
      hide(id);
  }
  function onclick(e){
    hide(id);
  }
  function onkeydown(e){
    if(e.keyCode == 27){
      hide(id);
    }
  }
  onMount(async ()=>{
    elements[id] = el;
  });
  onDestroy(()=>{
    elements[id] = undefined;
  });

	let { $$slots = {}, $$scope } = $$props;

	function div0_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			$$invalidate('inner_el', inner_el = $$value);
		});
	}

	function div1_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			$$invalidate('el', el = $$value);
		});
	}

	$$self.$set = $$props => {
		if ('$$scope' in $$props) $$invalidate('$$scope', $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => {
		return {};
	};

	$$self.$inject_state = $$props => {
		if ('id' in $$props) id = $$props.id;
		if ('el' in $$props) $$invalidate('el', el = $$props.el);
		if ('inner_el' in $$props) $$invalidate('inner_el', inner_el = $$props.inner_el);
	};

	return {
		el,
		inner_el,
		ontouchstart,
		onmousedown,
		onclick,
		onkeydown,
		div0_binding,
		div1_binding,
		$$slots,
		$$scope
	};
}

class Modal extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, []);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Modal", options, id: create_fragment.name });
	}
}

var faMouse = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, '__esModule', { value: true });
var prefix = 'fas';
var iconName = 'mouse';
var width = 384;
var height = 512;
var ligatures = [];
var unicode = 'f8cc';
var svgPathData = 'M0 352a160 160 0 0 0 160 160h64a160 160 0 0 0 160-160V224H0zM176 0h-16A160 160 0 0 0 0 160v32h176zm48 0h-16v192h176v-32A160 160 0 0 0 224 0z';

exports.definition = {
  prefix: prefix,
  iconName: iconName,
  icon: [
    width,
    height,
    ligatures,
    unicode,
    svgPathData
  ]};

exports.faMouse = exports.definition;
exports.prefix = prefix;
exports.iconName = iconName;
exports.width = width;
exports.height = height;
exports.ligatures = ligatures;
exports.unicode = unicode;
exports.svgPathData = svgPathData;
});

unwrapExports(faMouse);
var faMouse_1 = faMouse.definition;
var faMouse_2 = faMouse.faMouse;
var faMouse_3 = faMouse.prefix;
var faMouse_4 = faMouse.iconName;
var faMouse_5 = faMouse.width;
var faMouse_6 = faMouse.height;
var faMouse_7 = faMouse.ligatures;
var faMouse_8 = faMouse.unicode;
var faMouse_9 = faMouse.svgPathData;

var faMobileAlt = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, '__esModule', { value: true });
var prefix = 'fas';
var iconName = 'mobile-alt';
var width = 320;
var height = 512;
var ligatures = [];
var unicode = 'f3cd';
var svgPathData = 'M272 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h224c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM160 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm112-108c0 6.6-5.4 12-12 12H60c-6.6 0-12-5.4-12-12V60c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v312z';

exports.definition = {
  prefix: prefix,
  iconName: iconName,
  icon: [
    width,
    height,
    ligatures,
    unicode,
    svgPathData
  ]};

exports.faMobileAlt = exports.definition;
exports.prefix = prefix;
exports.iconName = iconName;
exports.width = width;
exports.height = height;
exports.ligatures = ligatures;
exports.unicode = unicode;
exports.svgPathData = svgPathData;
});

unwrapExports(faMobileAlt);
var faMobileAlt_1 = faMobileAlt.definition;
var faMobileAlt_2 = faMobileAlt.faMobileAlt;
var faMobileAlt_3 = faMobileAlt.prefix;
var faMobileAlt_4 = faMobileAlt.iconName;
var faMobileAlt_5 = faMobileAlt.width;
var faMobileAlt_6 = faMobileAlt.height;
var faMobileAlt_7 = faMobileAlt.ligatures;
var faMobileAlt_8 = faMobileAlt.unicode;
var faMobileAlt_9 = faMobileAlt.svgPathData;

/* src/routes/map/index.svelte generated by Svelte v3.12.1 */
const { document: document_1 } = globals;

const file$1 = "src/routes/map/index.svelte";

// (46:8) {#if sprites.town_night}
function create_if_block_4(ctx) {
	var img, img_src_value;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},

		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", { src: true, class: true }, false);
			var img_nodes = children(img);

			img_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(img, "src", img_src_value = ctx.sprites.town_night.src);
			attr_dev(img, "class", "w-6 h-6 inline");
			add_location(img, file$1, 46, 10, 1464);
		},

		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},

		p: function update(changed, ctx) {
			if ((changed.sprites) && img_src_value !== (img_src_value = ctx.sprites.town_night.src)) {
				attr_dev(img, "src", img_src_value);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(img);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_4.name, type: "if", source: "(46:8) {#if sprites.town_night}", ctx });
	return block;
}

// (52:8) {#if sprites.castle_night}
function create_if_block_3(ctx) {
	var img, img_src_value;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},

		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", { src: true, class: true }, false);
			var img_nodes = children(img);

			img_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(img, "src", img_src_value = ctx.sprites.castle_night.src);
			attr_dev(img, "class", "w-6 h-6 inline");
			add_location(img, file$1, 52, 10, 1650);
		},

		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},

		p: function update(changed, ctx) {
			if ((changed.sprites) && img_src_value !== (img_src_value = ctx.sprites.castle_night.src)) {
				attr_dev(img, "src", img_src_value);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(img);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_3.name, type: "if", source: "(52:8) {#if sprites.castle_night}", ctx });
	return block;
}

// (58:8) {#if sprites.city_night}
function create_if_block_2(ctx) {
	var img, img_src_value;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},

		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", { src: true, class: true }, false);
			var img_nodes = children(img);

			img_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(img, "src", img_src_value = ctx.sprites.city_night.src);
			attr_dev(img, "class", "w-6 h-6 inline");
			add_location(img, file$1, 58, 10, 1837);
		},

		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},

		p: function update(changed, ctx) {
			if ((changed.sprites) && img_src_value !== (img_src_value = ctx.sprites.city_night.src)) {
				attr_dev(img, "src", img_src_value);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(img);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_2.name, type: "if", source: "(58:8) {#if sprites.city_night}", ctx });
	return block;
}

// (64:8) {#if sprites.town && sprites.castle && sprites.city}
function create_if_block_1(ctx) {
	var img0, img0_src_value, t0, img1, img1_src_value, t1, img2, img2_src_value;

	const block = {
		c: function create() {
			img0 = element("img");
			t0 = space();
			img1 = element("img");
			t1 = space();
			img2 = element("img");
			this.h();
		},

		l: function claim(nodes) {
			img0 = claim_element(nodes, "IMG", { src: true, class: true }, false);
			var img0_nodes = children(img0);

			img0_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);

			img1 = claim_element(nodes, "IMG", { src: true, class: true }, false);
			var img1_nodes = children(img1);

			img1_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);

			img2 = claim_element(nodes, "IMG", { src: true, class: true }, false);
			var img2_nodes = children(img2);

			img2_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(img0, "src", img0_src_value = ctx.sprites.town.src);
			attr_dev(img0, "class", "w-6 h-6 inline");
			add_location(img0, file$1, 64, 10, 2038);
			attr_dev(img1, "src", img1_src_value = ctx.sprites.castle.src);
			attr_dev(img1, "class", "w-6 h-6 inline");
			add_location(img1, file$1, 65, 10, 2103);
			attr_dev(img2, "src", img2_src_value = ctx.sprites.city.src);
			attr_dev(img2, "class", "w-6 h-6 inline");
			add_location(img2, file$1, 66, 10, 2170);
		},

		m: function mount(target, anchor) {
			insert_dev(target, img0, anchor);
			insert_dev(target, t0, anchor);
			insert_dev(target, img1, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, img2, anchor);
		},

		p: function update(changed, ctx) {
			if ((changed.sprites) && img0_src_value !== (img0_src_value = ctx.sprites.town.src)) {
				attr_dev(img0, "src", img0_src_value);
			}

			if ((changed.sprites) && img1_src_value !== (img1_src_value = ctx.sprites.castle.src)) {
				attr_dev(img1, "src", img1_src_value);
			}

			if ((changed.sprites) && img2_src_value !== (img2_src_value = ctx.sprites.city.src)) {
				attr_dev(img2, "src", img2_src_value);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(img0);
				detach_dev(t0);
				detach_dev(img1);
				detach_dev(t1);
				detach_dev(img2);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_1.name, type: "if", source: "(64:8) {#if sprites.town && sprites.castle && sprites.city}", ctx });
	return block;
}

// (72:8) {#if sprites.fire}
function create_if_block(ctx) {
	var img, img_src_value;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},

		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", { src: true, class: true }, false);
			var img_nodes = children(img);

			img_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(img, "src", img_src_value = ctx.sprites.fire.src);
			attr_dev(img, "class", "w-6 h-6 inline");
			add_location(img, file$1, 72, 10, 2340);
		},

		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},

		p: function update(changed, ctx) {
			if ((changed.sprites) && img_src_value !== (img_src_value = ctx.sprites.fire.src)) {
				attr_dev(img, "src", img_src_value);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(img);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block.name, type: "if", source: "(72:8) {#if sprites.fire}", ctx });
	return block;
}

// (5:0) <Modal>
function create_default_slot_1(ctx) {
	var div19, div0, t0, t1, div3, div1, svg0, path0, t2, t3, div2, svg1, path1, t4, t5, div4, t6, t7, div11, div5, t8, t9, div6, t10, t11, div7, t12, t13, div8, t14, t15, div9, t16, t17, div10, t18, t19, div12, t20, t21, div18, div13, t22, t23, div14, t24, t25, div15, t26, t27, div16, t28, t29, div17, t30;

	var if_block0 = (ctx.sprites.town_night) && create_if_block_4(ctx);

	var if_block1 = (ctx.sprites.castle_night) && create_if_block_3(ctx);

	var if_block2 = (ctx.sprites.city_night) && create_if_block_2(ctx);

	var if_block3 = (ctx.sprites.town && ctx.sprites.castle && ctx.sprites.city) && create_if_block_1(ctx);

	var if_block4 = (ctx.sprites.fire) && create_if_block(ctx);

	const block = {
		c: function create() {
			div19 = element("div");
			div0 = element("div");
			t0 = text("조작법");
			t1 = space();
			div3 = element("div");
			div1 = element("div");
			svg0 = svg_element("svg");
			path0 = svg_element("path");
			t2 = text("\n        휠/드래그/더블클릭");
			t3 = space();
			div2 = element("div");
			svg1 = svg_element("svg");
			path1 = svg_element("path");
			t4 = text("\n        확대,드래그제스처/더블탭");
			t5 = space();
			div4 = element("div");
			t6 = text("개요");
			t7 = space();
			div11 = element("div");
			div5 = element("div");
			t8 = text("- 타일 한 칸은 스트리머 한 명을 의미합니다.");
			t9 = space();
			div6 = element("div");
			t10 = text("- 거리가 가까운 스트리머는 서로 비슷할 확률이 높습니다.");
			t11 = space();
			div7 = element("div");
			t12 = text("- 유의미하게 비슷한 스트리머 집단은 국가로 구분지어 표시됩니다.");
			t13 = space();
			div8 = element("div");
			t14 = text("- 국가의 이름은 국가 전체의 성격을 가장 잘 나타내는 스트리머의 이름으로 표시됩니다.");
			t15 = space();
			div9 = element("div");
			t16 = text("- 국가에 포함되지 않은 스트리머는 분쟁지역이거나 도시국가입니다.");
			t17 = space();
			div10 = element("div");
			t18 = text("- 지도의 형태와 스트리머들의 위치는 계산 결과에 따라 수시로 바뀔수있습니다.");
			t19 = space();
			div12 = element("div");
			t20 = text("범례");
			t21 = space();
			div18 = element("div");
			div13 = element("div");
			if (if_block0) if_block0.c();
			t22 = text("\n        100따리");
			t23 = space();
			div14 = element("div");
			if (if_block1) if_block1.c();
			t24 = text("\n        1000따리");
			t25 = space();
			div15 = element("div");
			if (if_block2) if_block2.c();
			t26 = text("\n        10000따리");
			t27 = space();
			div16 = element("div");
			if (if_block3) if_block3.c();
			t28 = text("\n        방송중");
			t29 = space();
			div17 = element("div");
			if (if_block4) if_block4.c();
			t30 = text("\n        채팅창 불남");
			this.h();
		},

		l: function claim(nodes) {
			div19 = claim_element(nodes, "DIV", { class: true }, false);
			var div19_nodes = children(div19);

			div0 = claim_element(div19_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			t0 = claim_text(div0_nodes, "조작법");
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div19_nodes);

			div3 = claim_element(div19_nodes, "DIV", { class: true }, false);
			var div3_nodes = children(div3);

			div1 = claim_element(div3_nodes, "DIV", {}, false);
			var div1_nodes = children(div1);

			svg0 = claim_element(div1_nodes, "svg", { "area-hidden": true, role: true, xmlns: true, viewBox: true, class: true }, true);
			var svg0_nodes = children(svg0);

			path0 = claim_element(svg0_nodes, "path", { fill: true, d: true }, true);
			var path0_nodes = children(path0);

			path0_nodes.forEach(detach_dev);
			svg0_nodes.forEach(detach_dev);
			t2 = claim_text(div1_nodes, "\n        휠/드래그/더블클릭");
			div1_nodes.forEach(detach_dev);
			t3 = claim_space(div3_nodes);

			div2 = claim_element(div3_nodes, "DIV", {}, false);
			var div2_nodes = children(div2);

			svg1 = claim_element(div2_nodes, "svg", { "area-hidden": true, role: true, xmlns: true, viewBox: true, class: true }, true);
			var svg1_nodes = children(svg1);

			path1 = claim_element(svg1_nodes, "path", { fill: true, d: true }, true);
			var path1_nodes = children(path1);

			path1_nodes.forEach(detach_dev);
			svg1_nodes.forEach(detach_dev);
			t4 = claim_text(div2_nodes, "\n        확대,드래그제스처/더블탭");
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t5 = claim_space(div19_nodes);

			div4 = claim_element(div19_nodes, "DIV", { class: true }, false);
			var div4_nodes = children(div4);

			t6 = claim_text(div4_nodes, "개요");
			div4_nodes.forEach(detach_dev);
			t7 = claim_space(div19_nodes);

			div11 = claim_element(div19_nodes, "DIV", { class: true }, false);
			var div11_nodes = children(div11);

			div5 = claim_element(div11_nodes, "DIV", {}, false);
			var div5_nodes = children(div5);

			t8 = claim_text(div5_nodes, "- 타일 한 칸은 스트리머 한 명을 의미합니다.");
			div5_nodes.forEach(detach_dev);
			t9 = claim_space(div11_nodes);

			div6 = claim_element(div11_nodes, "DIV", {}, false);
			var div6_nodes = children(div6);

			t10 = claim_text(div6_nodes, "- 거리가 가까운 스트리머는 서로 비슷할 확률이 높습니다.");
			div6_nodes.forEach(detach_dev);
			t11 = claim_space(div11_nodes);

			div7 = claim_element(div11_nodes, "DIV", {}, false);
			var div7_nodes = children(div7);

			t12 = claim_text(div7_nodes, "- 유의미하게 비슷한 스트리머 집단은 국가로 구분지어 표시됩니다.");
			div7_nodes.forEach(detach_dev);
			t13 = claim_space(div11_nodes);

			div8 = claim_element(div11_nodes, "DIV", {}, false);
			var div8_nodes = children(div8);

			t14 = claim_text(div8_nodes, "- 국가의 이름은 국가 전체의 성격을 가장 잘 나타내는 스트리머의 이름으로 표시됩니다.");
			div8_nodes.forEach(detach_dev);
			t15 = claim_space(div11_nodes);

			div9 = claim_element(div11_nodes, "DIV", {}, false);
			var div9_nodes = children(div9);

			t16 = claim_text(div9_nodes, "- 국가에 포함되지 않은 스트리머는 분쟁지역이거나 도시국가입니다.");
			div9_nodes.forEach(detach_dev);
			t17 = claim_space(div11_nodes);

			div10 = claim_element(div11_nodes, "DIV", {}, false);
			var div10_nodes = children(div10);

			t18 = claim_text(div10_nodes, "- 지도의 형태와 스트리머들의 위치는 계산 결과에 따라 수시로 바뀔수있습니다.");
			div10_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			t19 = claim_space(div19_nodes);

			div12 = claim_element(div19_nodes, "DIV", { class: true }, false);
			var div12_nodes = children(div12);

			t20 = claim_text(div12_nodes, "범례");
			div12_nodes.forEach(detach_dev);
			t21 = claim_space(div19_nodes);

			div18 = claim_element(div19_nodes, "DIV", { class: true }, false);
			var div18_nodes = children(div18);

			div13 = claim_element(div18_nodes, "DIV", { class: true }, false);
			var div13_nodes = children(div13);

			if (if_block0) if_block0.l(div13_nodes);
			t22 = claim_text(div13_nodes, "\n        100따리");
			div13_nodes.forEach(detach_dev);
			t23 = claim_space(div18_nodes);

			div14 = claim_element(div18_nodes, "DIV", { class: true }, false);
			var div14_nodes = children(div14);

			if (if_block1) if_block1.l(div14_nodes);
			t24 = claim_text(div14_nodes, "\n        1000따리");
			div14_nodes.forEach(detach_dev);
			t25 = claim_space(div18_nodes);

			div15 = claim_element(div18_nodes, "DIV", { class: true }, false);
			var div15_nodes = children(div15);

			if (if_block2) if_block2.l(div15_nodes);
			t26 = claim_text(div15_nodes, "\n        10000따리");
			div15_nodes.forEach(detach_dev);
			t27 = claim_space(div18_nodes);

			div16 = claim_element(div18_nodes, "DIV", { class: true }, false);
			var div16_nodes = children(div16);

			if (if_block3) if_block3.l(div16_nodes);
			t28 = claim_text(div16_nodes, "\n        방송중");
			div16_nodes.forEach(detach_dev);
			t29 = claim_space(div18_nodes);

			div17 = claim_element(div18_nodes, "DIV", { class: true }, false);
			var div17_nodes = children(div17);

			if (if_block4) if_block4.l(div17_nodes);
			t30 = claim_text(div17_nodes, "\n        채팅창 불남");
			div17_nodes.forEach(detach_dev);
			div18_nodes.forEach(detach_dev);
			div19_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div0, "class", "pt-2");
			add_location(div0, file$1, 6, 4, 133);
			attr_dev(path0, "fill", "currentColor");
			attr_dev(path0, "d", faMouse_2.icon[4]);
			add_location(path0, file$1, 10, 10, 396);
			attr_dev(svg0, "area-hidden", "true");
			attr_dev(svg0, "role", "img");
			attr_dev(svg0, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg0, "viewBox", "0 0 " + faMouse_2.icon[0] + " " + faMouse_2.icon[1]);
			attr_dev(svg0, "class", "w-3 h-3 mr-1 overflow-visible inline-block");
			add_location(svg0, file$1, 9, 8, 214);
			add_location(div1, file$1, 8, 6, 200);
			attr_dev(path1, "fill", "currentColor");
			attr_dev(path1, "d", faMobileAlt_2.icon[4]);
			add_location(path1, file$1, 16, 10, 703);
			attr_dev(svg1, "area-hidden", "true");
			attr_dev(svg1, "role", "img");
			attr_dev(svg1, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg1, "viewBox", "0 0 " + faMobileAlt_2.icon[0] + " " + faMobileAlt_2.icon[1]);
			attr_dev(svg1, "class", "w-3 h-3 mr-1 overflow-visible inline-block");
			add_location(svg1, file$1, 15, 8, 513);
			add_location(div2, file$1, 14, 6, 499);
			attr_dev(div3, "class", "text-sm pl-2");
			add_location(div3, file$1, 7, 4, 167);
			attr_dev(div4, "class", "pt-2");
			add_location(div4, file$1, 21, 4, 822);
			add_location(div5, file$1, 23, 6, 888);
			add_location(div6, file$1, 26, 6, 948);
			add_location(div7, file$1, 29, 6, 1014);
			add_location(div8, file$1, 32, 6, 1084);
			add_location(div9, file$1, 35, 6, 1166);
			add_location(div10, file$1, 38, 6, 1236);
			attr_dev(div11, "class", "text-sm pl-2");
			add_location(div11, file$1, 22, 4, 855);
			attr_dev(div12, "class", "pt-2");
			add_location(div12, file$1, 42, 4, 1322);
			attr_dev(div13, "class", "align-middle mb-1");
			add_location(div13, file$1, 44, 6, 1388);
			attr_dev(div14, "class", "align-middle mb-1");
			add_location(div14, file$1, 50, 6, 1572);
			attr_dev(div15, "class", "align-middle mb-1");
			add_location(div15, file$1, 56, 6, 1761);
			attr_dev(div16, "class", "mb-1");
			add_location(div16, file$1, 62, 6, 1947);
			attr_dev(div17, "class", "align-middle mb-1");
			add_location(div17, file$1, 70, 6, 2270);
			attr_dev(div18, "class", "text-sm pl-2");
			add_location(div18, file$1, 43, 4, 1355);
			attr_dev(div19, "class", "p-6 flex flex-col bg-gray-200 text-gray-600");
			add_location(div19, file$1, 5, 2, 71);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div19, anchor);
			append_dev(div19, div0);
			append_dev(div0, t0);
			append_dev(div19, t1);
			append_dev(div19, div3);
			append_dev(div3, div1);
			append_dev(div1, svg0);
			append_dev(svg0, path0);
			append_dev(div1, t2);
			append_dev(div3, t3);
			append_dev(div3, div2);
			append_dev(div2, svg1);
			append_dev(svg1, path1);
			append_dev(div2, t4);
			append_dev(div19, t5);
			append_dev(div19, div4);
			append_dev(div4, t6);
			append_dev(div19, t7);
			append_dev(div19, div11);
			append_dev(div11, div5);
			append_dev(div5, t8);
			append_dev(div11, t9);
			append_dev(div11, div6);
			append_dev(div6, t10);
			append_dev(div11, t11);
			append_dev(div11, div7);
			append_dev(div7, t12);
			append_dev(div11, t13);
			append_dev(div11, div8);
			append_dev(div8, t14);
			append_dev(div11, t15);
			append_dev(div11, div9);
			append_dev(div9, t16);
			append_dev(div11, t17);
			append_dev(div11, div10);
			append_dev(div10, t18);
			append_dev(div19, t19);
			append_dev(div19, div12);
			append_dev(div12, t20);
			append_dev(div19, t21);
			append_dev(div19, div18);
			append_dev(div18, div13);
			if (if_block0) if_block0.m(div13, null);
			append_dev(div13, t22);
			append_dev(div18, t23);
			append_dev(div18, div14);
			if (if_block1) if_block1.m(div14, null);
			append_dev(div14, t24);
			append_dev(div18, t25);
			append_dev(div18, div15);
			if (if_block2) if_block2.m(div15, null);
			append_dev(div15, t26);
			append_dev(div18, t27);
			append_dev(div18, div16);
			if (if_block3) if_block3.m(div16, null);
			append_dev(div16, t28);
			append_dev(div18, t29);
			append_dev(div18, div17);
			if (if_block4) if_block4.m(div17, null);
			append_dev(div17, t30);
		},

		p: function update(changed, ctx) {
			if (ctx.sprites.town_night) {
				if (if_block0) {
					if_block0.p(changed, ctx);
				} else {
					if_block0 = create_if_block_4(ctx);
					if_block0.c();
					if_block0.m(div13, t22);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (ctx.sprites.castle_night) {
				if (if_block1) {
					if_block1.p(changed, ctx);
				} else {
					if_block1 = create_if_block_3(ctx);
					if_block1.c();
					if_block1.m(div14, t24);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (ctx.sprites.city_night) {
				if (if_block2) {
					if_block2.p(changed, ctx);
				} else {
					if_block2 = create_if_block_2(ctx);
					if_block2.c();
					if_block2.m(div15, t26);
				}
			} else if (if_block2) {
				if_block2.d(1);
				if_block2 = null;
			}

			if (ctx.sprites.town && ctx.sprites.castle && ctx.sprites.city) {
				if (if_block3) {
					if_block3.p(changed, ctx);
				} else {
					if_block3 = create_if_block_1(ctx);
					if_block3.c();
					if_block3.m(div16, t28);
				}
			} else if (if_block3) {
				if_block3.d(1);
				if_block3 = null;
			}

			if (ctx.sprites.fire) {
				if (if_block4) {
					if_block4.p(changed, ctx);
				} else {
					if_block4 = create_if_block(ctx);
					if_block4.c();
					if_block4.m(div17, t30);
				}
			} else if (if_block4) {
				if_block4.d(1);
				if_block4 = null;
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div19);
			}

			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
			if (if_block3) if_block3.d();
			if (if_block4) if_block4.d();
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot_1.name, type: "slot", source: "(5:0) <Modal>", ctx });
	return block;
}

// (97:6) <span slot="tip">
function create_tip_slot(ctx) {
	var span, t;

	const block = {
		c: function create() {
			span = element("span");
			t = text("클릭하여 설명열기");
			this.h();
		},

		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { slot: true }, false);
			var span_nodes = children(span);

			t = claim_text(span_nodes, "클릭하여 설명열기");
			span_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(span, "slot", "tip");
			add_location(span, file$1, 96, 6, 2936);
		},

		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
			append_dev(span, t);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(span);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_tip_slot.name, type: "slot", source: "(97:6) <span slot=\"tip\">", ctx });
	return block;
}

// (96:4) <Tip click={tip_click}>
function create_default_slot(ctx) {
	const block = {
		c: noop,
		l: noop,
		m: noop,
		p: noop,
		d: noop
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot.name, type: "slot", source: "(96:4) <Tip click={tip_click}>", ctx });
	return block;
}

function create_fragment$1(ctx) {
	var t0, t1, div3, div1, div0, h2, t2, t3, t4, updating_selected, t5, div2, canvas_1, current, dispose;

	var modal = new Modal({
		props: {
		$$slots: { default: [create_default_slot_1] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var tip = new Tip({
		props: {
		click: tip_click,
		$$slots: {
		default: [create_default_slot],
		tip: [create_tip_slot]
	},
		$$scope: { ctx }
	},
		$$inline: true
	});

	function streamerautocomplete_selected_binding(value) {
		ctx.streamerautocomplete_selected_binding.call(null, value);
		updating_selected = true;
		add_flush_callback(() => updating_selected = false);
	}

	let streamerautocomplete_props = {
		streamers: ctx.streamers,
		placeholder: "지도에서 찾기",
		input_class: "bg-transparent border border-white text-sm md:w-40 w-32 p-2 md:mt-4 placeholder-white focus:bg-gray-600 transition-all transition-100",
		icon: "false",
		id: "streamer-map"
	};
	if (ctx.search !== void 0) {
		streamerautocomplete_props.selected = ctx.search;
	}
	var streamerautocomplete = new StreamerAutoComplete({
		props: streamerautocomplete_props,
		$$inline: true
	});

	binding_callbacks.push(() => bind(streamerautocomplete, 'selected', streamerautocomplete_selected_binding));

	const block = {
		c: function create() {
			t0 = space();
			modal.$$.fragment.c();
			t1 = space();
			div3 = element("div");
			div1 = element("div");
			div0 = element("div");
			h2 = element("h2");
			t2 = text("스트리머 지도");
			t3 = space();
			tip.$$.fragment.c();
			t4 = space();
			streamerautocomplete.$$.fragment.c();
			t5 = space();
			div2 = element("div");
			canvas_1 = element("canvas");
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_space(nodes);
			modal.$$.fragment.l(nodes);
			t1 = claim_space(nodes);

			div3 = claim_element(nodes, "DIV", {}, false);
			var div3_nodes = children(div3);

			div1 = claim_element(div3_nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			div0 = claim_element(div1_nodes, "DIV", {}, false);
			var div0_nodes = children(div0);

			h2 = claim_element(div0_nodes, "H2", { class: true }, false);
			var h2_nodes = children(h2);

			t2 = claim_text(h2_nodes, "스트리머 지도");
			h2_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);
			tip.$$.fragment.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			t4 = claim_space(div1_nodes);
			streamerautocomplete.$$.fragment.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			t5 = claim_space(div3_nodes);

			div2 = claim_element(div3_nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			canvas_1 = claim_element(div2_nodes, "CANVAS", { class: true }, false);
			var canvas_1_nodes = children(canvas_1);

			canvas_1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			document_1.title = "트수gg - 스트리머 지도";
			attr_dev(h2, "class", "inline-block text-2xl md:text-3xl");
			add_location(h2, file$1, 92, 4, 2831);
			add_location(div0, file$1, 91, 2, 2821);
			attr_dev(div1, "class", "fixed p-6 text-white md:block flex flex-row justify-between w-full md:w-auto");
			add_location(div1, file$1, 90, 0, 2728);
			attr_dev(canvas_1, "class", "w-full h-full canvas svelte-jpbj");
			add_location(canvas_1, file$1, 102, 2, 3318);
			attr_dev(div2, "class", "overflow-x-auto canvas-container svelte-jpbj");
			add_location(div2, file$1, 101, 0, 3269);
			add_location(div3, file$1, 81, 0, 2470);

			dispose = [
				listen_dev(div3, "mousedown", ctx.canvas_mouse_down),
				listen_dev(div3, "mouseup", ctx.canvas_mouse_up),
				listen_dev(div3, "mousemove", ctx.canvas_mouse_move),
				listen_dev(div3, "mouseleave", ctx.canvas_mouse_out),
				listen_dev(div3, "wheel", ctx.canvas_scroll),
				listen_dev(div3, "touchstart", ctx.canvas_touch_start),
				listen_dev(div3, "touchmove", ctx.canvas_touch_move)
			];
		},

		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			mount_component(modal, target, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, div3, anchor);
			append_dev(div3, div1);
			append_dev(div1, div0);
			append_dev(div0, h2);
			append_dev(h2, t2);
			append_dev(div0, t3);
			mount_component(tip, div0, null);
			append_dev(div1, t4);
			mount_component(streamerautocomplete, div1, null);
			append_dev(div3, t5);
			append_dev(div3, div2);
			append_dev(div2, canvas_1);
			ctx.canvas_1_binding(canvas_1);
			current = true;
		},

		p: function update(changed, ctx) {
			var modal_changes = {};
			if (changed.$$scope || changed.sprites) modal_changes.$$scope = { changed, ctx };
			modal.$set(modal_changes);

			var tip_changes = {};
			if (changed.$$scope) tip_changes.$$scope = { changed, ctx };
			tip.$set(tip_changes);

			var streamerautocomplete_changes = {};
			if (changed.streamers) streamerautocomplete_changes.streamers = ctx.streamers;
			if (!updating_selected && changed.search) {
				streamerautocomplete_changes.selected = ctx.search;
			}
			streamerautocomplete.$set(streamerautocomplete_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(modal.$$.fragment, local);

			transition_in(tip.$$.fragment, local);

			transition_in(streamerautocomplete.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(modal.$$.fragment, local);
			transition_out(tip.$$.fragment, local);
			transition_out(streamerautocomplete.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t0);
			}

			destroy_component(modal, detaching);

			if (detaching) {
				detach_dev(t1);
				detach_dev(div3);
			}

			destroy_component(tip);

			destroy_component(streamerautocomplete);

			ctx.canvas_1_binding(null);
			run_all(dispose);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$1.name, type: "component", source: "", ctx });
	return block;
}

async function preload(page, session) {
  let streamers = await API.streamer_map.call(this);
  let interest_streamer = streamers.find(s => s.id == page.query.interest_streamer_id);
  return { streamers, interest_streamer };
}

let clustering_show = true;

let potrait_show = true;

let name_show = true;

function tip_click() {
show(0);
}

function get_distance(e) {
var diffX = e.touches[0].clientX - e.touches[1].clientX;
var diffY = e.touches[0].clientY - e.touches[1].clientY;
return Math.sqrt(diffX * diffX + diffY * diffY); // Pythagorean theorem
}

function instance$1($$self, $$props, $$invalidate) {
	

let { streamers, interest_streamer } = $$props;

const COLORS = {
  sea: "#2D3343",
  land: "#806A5C",
  load: "#3c3c33",
  highlight: "#d4af37",
};

let canvas;

let search = interest_streamer;

let n = Math.max(...streamers.map(s=>s.x), ...streamers.map(s=>s.y)) + 1;
let camera = interest_streamer? 
  [interest_streamer.x/n, interest_streamer.y/n, 1.5] : 
  [0.5, 0.45, 0.85];
let piece_size = [64, 64];

let last_pointer_x=null, last_pointer_y=null, clicking = false;
function canvas_mouse_down(e) {
  last_pointer_x = e.pageX - canvas.getBoundingClientRect().x;
  last_pointer_y = e.pageY - canvas.getBoundingClientRect().y;
  clicking = true;
  //return e.preventDefault() && false;
}
function canvas_mouse_up(e) {
  clicking = false;
  //return e.preventDefault() && false;
}
function canvas_mouse_out(e) {
  clicking = false;
}
function canvas_mouse_move(e) {
  let dx = (e.pageX - canvas.getBoundingClientRect().x) - last_pointer_x,
      dy = (e.pageY - canvas.getBoundingClientRect().y) - last_pointer_y;
  last_pointer_x += dx;
  last_pointer_y += dy;
  if(!clicking) return;
  camera[0] -= dx / (n * piece_size[0]*camera[2]);
  camera[1] -= dy / (n * piece_size[1]*camera[2]);
}
function canvas_scroll(e) {
  let delta = e.wheelDelta ? e.wheelDelta : e.detail ? - e.detail : 0;
  camera[2] += delta / canvas.width;
  return e.preventDefault() && false;
}

function canvas_touch_start(e) {
  let rect = canvas.getBoundingClientRect();
  if (e.touches.length > 1) { // if multiple touches (pinch zooming)
    finger_dist = get_distance(e); // Save current finger distance
  } // Else just moving around
  last_pointer_x = e.touches[0].clientX - rect.x; // Save finger position
  last_pointer_y = e.touches[0].clientY - rect.y; //
  if ("activeElement" in document)
    document.activeElement.blur();
}
let finger_dist=0;
function canvas_touch_move(e) {
  e.preventDefault(); // Stop the window from moving
  let rect = canvas.getBoundingClientRect();
  if (finger_dist && e.touches.length > 1) { // If pinch-zooming
    let new_finger_dist = get_distance(e); // Get current distance between fingers
    if(finger_dist) camera[2] = camera[2] * Math.abs(new_finger_dist / finger_dist); // Zoom is proportional to change
    finger_dist = new_finger_dist; // Save current distance for next time
  } else if(!finger_dist){ 
    let dx = e.touches[0].clientX - last_pointer_x - rect.x,
        dy = e.touches[0].clientY - last_pointer_y - rect.y;
    last_pointer_x += dx;
    last_pointer_y += dy;
    camera[0] -= dx / (n * piece_size[0]*camera[2]);
    camera[1] -= dy / (n * piece_size[1]*camera[2]);
  }
  return e.preventDefault() && false;
}

let sprites = { };

let frame;

onMount(async ()=>{
  const { Patterns } = (await import('./CanvasPatterns.0f904711.js'));
  $$invalidate('sprites', sprites.city = new Image(), sprites);
  $$invalidate('sprites', sprites.city.src = "/city_on.png", sprites);
  $$invalidate('sprites', sprites.castle = new Image(), sprites);
  $$invalidate('sprites', sprites.castle.src = "/castle_on.png", sprites);
  $$invalidate('sprites', sprites.town = new Image(), sprites);
  $$invalidate('sprites', sprites.town.src = "/town_on.png", sprites);
  $$invalidate('sprites', sprites.city_night = new Image(), sprites);
  $$invalidate('sprites', sprites.city_night.src = "/city_off.png", sprites);
  $$invalidate('sprites', sprites.castle_night = new Image(), sprites);
  $$invalidate('sprites', sprites.castle_night.src = "/castle_off.png", sprites);
  $$invalidate('sprites', sprites.town_night = new Image(), sprites);
  $$invalidate('sprites', sprites.town_night.src = "/town_off.png", sprites);
  $$invalidate('sprites', sprites.fire = new Image(), sprites);
  $$invalidate('sprites', sprites.fire.src = "/fire.png", sprites);
  let ctx = canvas.getContext("2d");
  $$invalidate('canvas', canvas.width = canvas.getBoundingClientRect().width, canvas);
  $$invalidate('canvas', canvas.height = canvas.getBoundingClientRect().height, canvas);
  //canvas.height = canvas.width;//canvas.getBoundingClientRect().height;
  piece_size = [Math.min(canvas.width, canvas.height) / n, Math.min(canvas.height, canvas.width) / n];
  let border_width = 6;
  let representor_of_cluster = [];
  let cluster_to_streamers = [];
  let streamer_matrix = Array(n).fill().map(()=>Array(n).fill(null));
  for(let s of streamers) {
    s.image = new Image();
    streamer_matrix[s.x][s.y] = s;
    if(s.cluster >= 0) {
      if(cluster_to_streamers[s.cluster] == null) 
        cluster_to_streamers[s.cluster] = [];
      cluster_to_streamers[s.cluster].push(s);
    }
  }
  for(let i in cluster_to_streamers) {
    cluster_to_streamers[i].sort((a, b) => b.probability - a.probability);
    representor_of_cluster[i] = cluster_to_streamers[i][0];
    representor_of_cluster[i].representation_x = cluster_to_streamers[i].reduce((a, b) => a + b.x, 0) / cluster_to_streamers[i].length;
    representor_of_cluster[i].representation_y = cluster_to_streamers[i].reduce((a, b) => a + b.y, 0) / cluster_to_streamers[i].length;
  }
  for(let s of streamers) {
    if(s.cluster >= 0 && (s.x-1 < 0 || streamer_matrix[s.x-1][s.y] == null || streamer_matrix[s.x-1][s.y].cluster != s.cluster))
      s.left_edge = true;
    if(s.cluster >= 0 && (s.x+1 >= streamer_matrix.length || streamer_matrix[s.x+1][s.y] == null || streamer_matrix[s.x+1][s.y].cluster != s.cluster))
      s.right_edge = true;
    if(s.cluster >= 0 && (s.y-1 < 0 || streamer_matrix[s.x][s.y-1] == null || streamer_matrix[s.x][s.y-1].cluster != s.cluster))
      s.top_edge = true;
    if(s.cluster >= 0 && (s.y+1 >= streamer_matrix.length || streamer_matrix[s.x][s.y+1] == null || streamer_matrix[s.x][s.y+1].cluster != s.cluster))
      s.bottom_edge = true;
  }
  let frame_index = 0;
  ctx.textBaseline = "top";
  ctx.textAlign = "center";
  ctx.font = "12px Arial";

  let pw, ph;
  let view;

  $$invalidate('canvas', canvas.ondblclick = function(e){
    let target = (streamer_matrix[Math.floor((e.pageX - canvas.getBoundingClientRect().x + view[0]) / pw)] || [])[Math.floor((e.pageY - canvas.getBoundingClientRect().y + view[1]) / ph)];
    if(target)
      location = `/streamer/${target.id}`;
    return e.preventDefault() && false;
  }, canvas);
  let timer = null, last_target;
  let canvas_touch_end = function(e) {
    if (e.touches.length >= 1) return;
    finger_dist = 0;
    let target = (streamer_matrix[Math.floor((last_pointer_x + view[0]) / pw)] || [])[Math.floor((last_pointer_y + view[1]) / ph)];
    if(timer == null){
      last_target = target;
      timer = setTimeout(function () {
          timer = null;
          last_target = null;
      }, 300);
    }else {
      clearTimeout(timer);
      timer = null;
      if(target && target == last_target)
        location = `/streamer/${target.id}`;
      else {
        last_target = target;
        timer = setTimeout(function () {
            timer = null;
            last_target = null;
        }, 300);
      }
    }
  };
  let searched = [];
  canvas.addEventListener("touchend", canvas_touch_end);
  canvas.addEventListener("touchcancel", canvas_touch_end);
  (function loop() {
    frame = requestAnimationFrame(loop);
    if(search) {
      camera[0] = search.x/n;
      camera[1] = search.y/n;
      $$invalidate('search', search.highlight = true, search);
      searched.push(search);
      $$invalidate('search', search = null);
    }
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    pw = Math.ceil(piece_size[0]*camera[2]);
    ph = Math.ceil(piece_size[1]*camera[2]);
    view = [pw*n*camera[0] - canvas.width*0.5, ph*n*camera[1] - canvas.height*0.5, canvas.width, canvas.height];
    let view_x = Math.floor(view[0]/pw), 
        view_y = Math.floor(view[1]/ph),
        view_x2 = Math.ceil((view[0]+view[2]) / pw),
        view_y2 = Math.ceil((view[1]+view[3]) / ph);
    border_width = pw/10;
    ctx.font = Math.max(Math.floor(pw/5), 12) + "px Arial";
    let hovered = (streamer_matrix[Math.floor((last_pointer_x + view[0]) / pw)] || [])[Math.floor((last_pointer_y + view[1]) / ph)];
    // Zoomed enough: present all streamers
    ctx.save();
    //ctx.fillStyle = COLORS.sea;
    //ctx.fillRect(0, 0, canvas.width, canvas.height);
    ctx.restore();
  
    for(let x=view_x; x<=view_x2; ++x){
      for(let y=view_y; y<=view_y2; ++y){
        let px = Math.floor(pw*x - view[0]), 
            py = Math.floor(ph*y - view[1]);
        if(streamer_matrix[x] == null || streamer_matrix[x][y] == null) {
          ctx.save();
          //ctx.fillStyle = "#718096"
          //ctx.fillStyle = "#414a4c"
          //ctx.fillStyle = COLORS.sea;
          //ctx.fillRect(px, py, pw, ph);
          ctx.restore();
          continue;
        }
        let s = streamer_matrix[x][y];
        ctx.fillStyle = COLORS.land;
        ctx.fillRect(px, py, pw, ph);
        if(s.cluster >= 0) {
          ctx.save();
          ctx.globalAlpha = 0.5;
          ctx.fillStyle = Patterns[s.cluster];
          ctx.fillRect(px, py, pw, ph);
          ctx.restore();
        }
      }
    }
    if(pw >= 64 && ph >= 64) {
      for(let x=view_x; x<=view_x2; ++x){
        for(let y=view_y; y<=view_y2; ++y){
          let px = Math.floor(pw*x - view[0]), 
              py = Math.floor(ph*y - view[1]);
          if(streamer_matrix[x] == null || streamer_matrix[x][y] == null){
            ctx.save();
            //ctx.fillStyle = "#718096"
            //ctx.fillStyle = COLORS.sea;
            //  ctx.fillRect(px, py, pw, ph);
            ctx.restore();
              continue;
          }
          let s = streamer_matrix[x][y];
          if(potrait_show){
            ctx.save();
            if(s.image.src && s.image.complete && s.image.naturalWidth > 0)
              ctx.drawImage(s.image, px, py, pw, ph);
            else {
              if(!s.image.src) 
                s.image.src = s.profile_image_url;
              ctx.fillStyle = "#CDA8C7";
              ctx.fillText("로딩중", px + pw*0.5, py); 
            }
            ctx.restore();
          }
          if(s.highlight) {
            if(s == hovered)
              s.highlight = false;
            if(frame_index%10 > 5){
              ctx.save();
              ctx.globalAlpha = 0.5;
              ctx.fillStyle = COLORS.highlight;
              ctx.fillRect(px + border_width, py+border_width, pw - 2*border_width, ph - 2*border_width);
              ctx.globalAlpha = 1.0;
              ctx.restore();
            }
          }
          if(name_show || hovered == s){
            ctx.save();
            let fh = parseInt(ctx.font),
                fw = ctx.measureText(s.name).width,
                l = Math.ceil(fw/(pw - 2*border_width)),
                text_piece_length = Math.floor(s.name.length / l);
            ctx.globalAlpha = 0.7;
            ctx.fillStyle = "#fff";
            ctx.fillRect(px + border_width, py+ph - border_width - fh*l, pw - 2*border_width, fh*l);
            ctx.globalAlpha = 1.0;
            ctx.fillStyle = "#000";
            for(let i=0; i<l-1; ++i)
              ctx.fillText(s.name.substr(i*text_piece_length, text_piece_length), px + pw*0.5, py + ph - border_width - fh*l + i*fh);
            ctx.fillText(s.name.slice((l-1)*text_piece_length), px+pw*0.5, py + ph - border_width - fh);
            //ctx.fillText(s.name, px + pw*0.5, py + ph - border_width - fh);
            ctx.restore();
          }
          if(s.is_streaming){
            ctx.save();
            ctx.beginPath();
            ctx.globalAlpha = Math.abs(Math.sin(frame_index/20));
            ctx.arc(px + border_width + pw/15, py + border_width + ph/15, pw/15-1, 0, 2 * Math.PI, false);
            ctx.fillStyle = "#FF4560";
            ctx.fill();
            ctx.restore();
          }
        }
      }
    }
    else{
      if(pw > 32 && ph > 32){
        for(let s of representor_of_cluster) {
            let rx = pw*s.representation_x - view[0] + pw*0.5 + (camera[0] - 0.5)*pw,
                ry = ph*s.representation_y - view[1] + ph*0.5 + (camera[1] - 0.5)*ph;
            let px = pw*s.x - view[0], 
                py = ph*s.y - view[1];
            ctx.save();
            ctx.globalAlpha = 1.0;
            ctx.textBaseline = "middle";
            ctx.textAlign = "center";
            ctx.fillStyle = "white";
            ctx.strokeStyle = "black";
            ctx.font = "italic " + Math.max(Math.floor(pw/1.5), 12) + "px Arial";
            let fw = ctx.measureText(s.name).width,
                fh = parseInt(ctx.font);
            ctx.fillText(s.name, rx, ry);
            ctx.restore();
        }
        for(let x=view_x; x<=view_x2; ++x){
          for(let y=view_y; y<=view_y2; ++y){
            let px = Math.floor(pw*x - view[0]), 
                py = Math.floor(ph*y - view[1]);
            if(streamer_matrix[x] == null || streamer_matrix[x][y] == null)
              continue;
            let s = streamer_matrix[x][y];
            if(!(s == hovered || s.highlight)) {
              if(s.average_viewer_count >= 10000) {
                if(s.is_streaming){
                  if(sprites.city.complete)
                    ctx.drawImage(sprites.city, px, py, pw, ph);
                }
                else {
                  if(sprites.city_night.complete)
                    ctx.drawImage(sprites.city_night, px, py, pw, ph);
                }
              }
              else if(s.average_viewer_count >= 1000) {
                if(s.is_streaming){
                  if(sprites.castle.complete)
                    ctx.drawImage(sprites.castle, px+pw*0.2, py+ph*0.2, pw*0.6, ph*0.6);
                }
                else {
                  if(sprites.castle_night.complete)
                    ctx.drawImage(sprites.castle_night, px+pw*0.2, py+ph*0.2, pw*0.6, ph*0.6);
                }
              }
              else if(s.average_viewer_count >= 100) {
                if(s.is_streaming){
                  if(sprites.town.complete)
                    ctx.drawImage(sprites.town, px+pw*0.2, py+ph*0.2, pw*0.6, ph*0.6);
                }
                else {
                  if(sprites.town_night.complete)
                    ctx.drawImage(sprites.town_night, px+pw*0.2, py+ph*0.2, pw*0.6, ph*0.6);
                }
              }
              /*else {
                if(s.is_streaming) {
                  ctx.fillStyle = "#fffe00";
                  ctx.beginPath();
                  ctx.arc(px + pw*0.5, py + ph*0.5, pw*0.05, 0, Math.PI*2);
                  ctx.fill();
                }
              }*/
              if(s.is_streaming && s.chatting_speed >= 5){
                if(sprites.fire.complete){
                  ctx.globalAlpha = 0.5;
                  ctx.drawImage(sprites.fire, px + pw*0.2, py+ph*0.2, pw*0.6, ph*0.6);
                  ctx.globalAlpha = 1.0;
                }
              }
              if(!s.is_streaming){
                ctx.globalAlpha = 0.3;
                ctx.fillStyle = "#000";
                ctx.fillRect(px, py, pw, ph);
                ctx.globalAlpha = 1.0;
              }
            }
          }
        }
      }
      if(hovered) {
        ctx.save();
        let s = hovered;
        let px = pw*s.x - view[0], 
          py = ph*s.y - view[1];
        if(s.image.src && s.image.complete && s.image.naturalWidth > 0)
          ctx.drawImage(s.image, px, py, pw, ph);
        else {
          if(!s.image.src) 
            s.image.src = s.profile_image_url;
          ctx.fillStyle = "#CDA8C7";
          ctx.fillText("로딩중", px + pw*0.5, py); 
        }
        ctx.restore();
      }
      for(let i=0, l=searched.length; i<l; ++i) {
        ctx.save();
        let s = searched[i];
        let px = pw*s.x - view[0], 
          py = ph*s.y - view[1];
        if(s.image.src && s.image.complete && s.image.naturalWidth > 0)
          ctx.drawImage(s.image, px, py, pw, ph);
        else {
          if(!s.image.src) 
            s.image.src = s.profile_image_url;
          ctx.fillStyle = "#CDA8C7";
          ctx.fillText("로딩중", px + pw*0.5, py); 
        }
        ctx.restore();
        if(s == hovered){
          searched.splice(i, 1);
          i -= 1;
          l -= 1;
          s.highlight = false;
        }
        if(frame_index%10 > 5){
          ctx.save();
          ctx.globalAlpha = 0.5;
          ctx.fillStyle = "#d4af37";
          ctx.fillRect(px + border_width, py+border_width, pw - 2*border_width, ph - 2*border_width);
          ctx.globalAlpha = 1.0;
          ctx.restore();
        }
      }
    }
    for(let x=view_x; x<=view_x2; ++x){
      for(let y=view_y; y<=view_y2; ++y){
        let px = Math.floor(pw*x - view[0]), 
            py = Math.floor(ph*y - view[1]);
        if(streamer_matrix[x] == null || streamer_matrix[x][y] == null)
          continue;
        let s = streamer_matrix[x][y];
        /*
        if(!s.is_streaming){
          ctx.save();
          ctx.globalAlpha = 0.2;
          ctx.fillStyle = "#000";
          ctx.fillRect(px, py, pw, ph);
          ctx.restore();
        } else{
          ctx.save();
          ctx.globalAlpha = 0.2;
          ctx.fillStyle = "#fff";
          ctx.fillRect(px, py, pw, ph);
          ctx.restore();
        }*/
        if(clustering_show) {
          ctx.save();
          if(hovered && hovered.cluster == s.cluster) 
            ctx.globalAlpha = Math.abs(Math.sin(frame_index/20));
          ctx.fillStyle = Patterns[s.cluster];
          if(s.left_edge){
            let y=py, y2=py+ph;
            if(!s.bottom_edge)
              y2 += border_width;
            if(!s.top_edge)
              y -= border_width;
            ctx.fillRect(
                px,
                y,
                border_width, y2-y);
          }
          if(s.right_edge){
            let y=py, y2=py+ph;
            if(!s.bottom_edge)
              y2 += border_width;
            if(!s.top_edge)
              y -= border_width;
            ctx.fillRect(
                px + pw - border_width,
                y, 
                border_width, y2-y);
          }
          if(s.top_edge){
            let x=px, x2=px + pw;
            if(!s.right_edge)
              x2 += border_width;
            if(!s.left_edge)
              x -= border_width;
            ctx.fillRect(
                x, 
                py,
                x2-x, border_width);
          }
          if(s.bottom_edge){
            let x=px, x2=px+pw;
            if(!s.right_edge)
              x2 += border_width;
            if(!s.left_edge)
              x -= border_width;
            ctx.fillRect(
                x, 
                py + ph - border_width,
                x2-x, border_width);
          }
          ctx.restore();
        }
      }
    }
    if(pw < 64 || ph < 64) {
      for(let x=view_x; x<=view_x2; ++x){
        for(let y=view_y; y<=view_y2; ++y){
          let px = Math.floor(pw*x - view[0]), 
              py = Math.floor(ph*y - view[1]);
          if(streamer_matrix[x] == null || streamer_matrix[x][y] == null)
            continue;
          let s = streamer_matrix[x][y];
          if(hovered == s) {
            ctx.save();
            ctx.globalAlpha = 0.7;
            ctx.fillStyle = "#fff";
            let fh = parseInt(ctx.font),
                fw = ctx.measureText(s.name).width;
            ctx.fillRect(px + pw*0.5 - fw*0.5, py+ph, fw, fh);
            ctx.globalAlpha = 1.0;
            ctx.fillStyle = "#000";
            ctx.fillText(s.name, px+pw*0.5, py+ph);
            ctx.restore();
          }
        }
      }
      for(let s of representor_of_cluster) {
          let rx = pw*s.representation_x - view[0] + pw*0.5 + (camera[0] - 0.5)*pw,
              ry = ph*s.representation_y - view[1] + ph*0.5 + (camera[1] - 0.5)*ph;
          let px = pw*s.x - view[0], 
              py = ph*s.y - view[1];
          ctx.save();
          ctx.globalAlpha = 0.7;
          ctx.textBaseline = "middle";
          ctx.textAlign = "center";
          ctx.fillStyle = "white";
          ctx.strokeStyle = "black";
          //ctx.font = "italic 14px Arial";
          //ctx.font = "italic " + Math.max(Math.floor(pw/2), 12) + "px Arial";
          ctx.font = "italic " + Math.max(Math.floor(pw/1.5), 12) + "px Arial";
          let fw = ctx.measureText(s.name).width,
              fh = parseInt(ctx.font);
          /*rx = rx - fw*0.5 < 0? fw*0.5: 
               (rx + fw*0.5 >= canvas.width? canvas.width - fw*0.5 : rx),
          ry = ry - fh*0.5 < 0? fh*0.5: 
               (ry + fh*0.5 >= canvas.height? canvas.height - fh*0.5 : ry);*/
          //ctx.lineWidth = 5;
          //ctx.strokeText(s.name, rx, ry);
          ctx.fillText(s.name, rx, ry);
          ctx.globalAlpha = 0.5;
          ctx.fillText(s.name, rx, ry);
          ctx.restore();
      }
    }
    frame_index += 1;
  }());
  return ()=>{
    cancelAnimationFrame(frame);
  }
});
onDestroy(()=>{
  if(frame) {
    cancelAnimationFrame(frame);
    frame = null;
  }
});
/*
        let fh = parseInt(ctx.font);
        ctx.globalAlpha = 0.7;
        ctx.fillStyle = "#fff";
        ctx.fillRect(px + border_width, py+ph - border_width - fh, pw - 2*border_width, fh);
        ctx.globalAlpha = 1.0;
        ctx.fillStyle = "#000";
        ctx.fillText(s.name, px + border_width*0.5, py + ph - border_width - fh);
      }
    }
  }());
  return ()=>{
    cancelAnimationFrame(frame);
  }
});
*/

	const writable_props = ['streamers', 'interest_streamer'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Index> was created with unknown prop '${key}'`);
	});

	function streamerautocomplete_selected_binding(value) {
		search = value;
		$$invalidate('search', search);
	}

	function canvas_1_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			$$invalidate('canvas', canvas = $$value);
		});
	}

	$$self.$set = $$props => {
		if ('streamers' in $$props) $$invalidate('streamers', streamers = $$props.streamers);
		if ('interest_streamer' in $$props) $$invalidate('interest_streamer', interest_streamer = $$props.interest_streamer);
	};

	$$self.$capture_state = () => {
		return { streamers, interest_streamer, canvas, search, clustering_show, potrait_show, name_show, n, camera, piece_size, last_pointer_x, last_pointer_y, clicking, finger_dist, sprites, frame };
	};

	$$self.$inject_state = $$props => {
		if ('streamers' in $$props) $$invalidate('streamers', streamers = $$props.streamers);
		if ('interest_streamer' in $$props) $$invalidate('interest_streamer', interest_streamer = $$props.interest_streamer);
		if ('canvas' in $$props) $$invalidate('canvas', canvas = $$props.canvas);
		if ('search' in $$props) $$invalidate('search', search = $$props.search);
		if ('clustering_show' in $$props) clustering_show = $$props.clustering_show;
		if ('potrait_show' in $$props) potrait_show = $$props.potrait_show;
		if ('name_show' in $$props) name_show = $$props.name_show;
		if ('n' in $$props) n = $$props.n;
		if ('camera' in $$props) camera = $$props.camera;
		if ('piece_size' in $$props) piece_size = $$props.piece_size;
		if ('last_pointer_x' in $$props) last_pointer_x = $$props.last_pointer_x;
		if ('last_pointer_y' in $$props) last_pointer_y = $$props.last_pointer_y;
		if ('clicking' in $$props) clicking = $$props.clicking;
		if ('finger_dist' in $$props) finger_dist = $$props.finger_dist;
		if ('sprites' in $$props) $$invalidate('sprites', sprites = $$props.sprites);
		if ('frame' in $$props) frame = $$props.frame;
	};

	return {
		streamers,
		interest_streamer,
		canvas,
		search,
		canvas_mouse_down,
		canvas_mouse_up,
		canvas_mouse_out,
		canvas_mouse_move,
		canvas_scroll,
		canvas_touch_start,
		canvas_touch_move,
		sprites,
		streamerautocomplete_selected_binding,
		canvas_1_binding
	};
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, ["streamers", "interest_streamer"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Index", options, id: create_fragment$1.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.streamers === undefined && !('streamers' in props)) {
			console.warn("<Index> was created without expected prop 'streamers'");
		}
		if (ctx.interest_streamer === undefined && !('interest_streamer' in props)) {
			console.warn("<Index> was created without expected prop 'interest_streamer'");
		}
	}

	get streamers() {
		throw new Error("<Index>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set streamers(value) {
		throw new Error("<Index>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get interest_streamer() {
		throw new Error("<Index>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set interest_streamer(value) {
		throw new Error("<Index>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Index;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
