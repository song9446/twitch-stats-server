!function(){"use strict";const e=["client/index.1cf7c1a4.js","client/StreamerAutoComplete.8a6c7cc9.js","client/client.02ae2553.js","client/config.c223256a.js","client/StreamerMap.34098551.js","client/index.2efc9ab6.js","client/hidden-links.bbfbf7db.js","client/[id].b9d1fdfa.js","client/map.ec438db9.js"].concat(["service-worker-index.html","favicon.png","global.css","index.css","manifest.json","tailwind.css"]),t=new Set(e);self.addEventListener("install",t=>{t.waitUntil(caches.open("cache1577812715638").then(t=>t.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const t of e)"cache1577812715638"!==t&&await caches.delete(t);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const c=new URL(e.request.url);c.protocol.startsWith("http")&&(c.hostname===self.location.hostname&&c.port!==self.location.port||(c.host===self.location.host&&t.has(c.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1577812715638").then(async t=>{try{const c=await fetch(e.request);return t.put(e.request,c.clone()),c}catch(c){const s=await t.match(e.request);if(s)return s;throw c}}))))})}();
